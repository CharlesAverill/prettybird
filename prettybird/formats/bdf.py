import os
import subprocess
import tempfile

from pathlib import Path

class BDF:
    def __init__(self, filename: str, version: str, font_name: str, point_size: int, bounding_box: tuple[int, int], properties: list[tuple]):
        if not filename.lower().endswith(".bdf"):
            raise UserWarning("BDF files should end with \".bdf\"")
        self.filename = filename
        self.file = None
        self.version = version
        self.font_name = font_name
        self.point_size = point_size
        self.bounding_box = bounding_box
        self.properties = properties

        self.compiled = False

    def compile(self):
        self.file = open(self.filename, "w")

        self.file.write(f"STARTFONT {str(self.version)}\n")
        self.file.write(f"FONT {self.font_name}\n")
        self.file.write(f"SIZE {self.point_size} 75 75\n")
        self.file.write(f"FONTBOUNDINGBOX {self.bounding_box[0]} {self.bounding_box[1]} 0 -1\n")
        self.file.write(f"COMMENT Generated by prettybird, https://github.com/CharlesAverill/prettybird")
        if self.properties and len(self.properties):
            self.file.write(f"STARTPROPERTIES {len(self.properties)}")
            self.file.write("ENDPROPERTIES")

        self.file.write("ENDFONT\n")

        self.file.close()

        self.compiled = True
    
    def convert_to_ttf(self):
        if not self.compiled:
            raise RuntimeError("Can't convert BDF to TTF before compilation")
        tmpfile = tempfile.NamedTemporaryFile(delete=False, suffix=".ini")
        tmpfile.write(f"Fontname = {self.font_name}\n".encode())
        tmpfile.close()

        bdf2ttf_path = Path(__file__).parents[2] / "lib" / "bdf2ttf" / "bdf2ttf"

        if "." not in self.filename:
            self.filename += "."

        cmd = f"{bdf2ttf_path.absolute()} {self.filename[:self.filename.rindex('.')]}.ttf {tmpfile.name} {self.filename}"
        subprocess.check_output(cmd, shell=True, stderr=subprocess.STDOUT)
        os.remove(tmpfile.name)


if __name__ == "__main__":
    font = BDF(filename="test.bdf", version="0.1", font_name="test", point_size=16, bounding_box=(6, 8), properties=[])
    font.compile()
    font.convert_to_ttf()
