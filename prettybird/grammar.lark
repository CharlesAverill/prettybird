?start: character+
    
character: "char" IDENTIFIER ("encoding=" INT)? "{" character_statements "}"

character_statements: character_statement
                    | character_statement character_statements

character_statement: "base" "{" base_statement "}"
                   | "steps" steps_statements

?base_statement: blank_statement
               | constant_base_statement
               | from_character_base_statement

blank_statement: "blank" "(" INT "," INT ")"

constant_base_statement: CONSTANT_BASE_STATEMENT_CHARACTER+ "," constant_base_statement
                       | CONSTANT_BASE_STATEMENT_CHARACTER+ ","
                       | CONSTANT_BASE_STATEMENT_CHARACTER+

from_character_base_statement: "from_char" "(" IDENTIFIER ")"

steps_statements: "{" "}"
                 | "{" step_statement+ "}"

step_statement: UPDATE_MODE FILLED? HALF? step
              | UPDATE_MODE HALF? FILLED? step

step: point_step
    | vector_step
    | circle_step
    | ellipse_step
    | square_step
    | rectangle_step

// Just this point
point_step: "point" "(" point ")"

// Line from first point to second point
vector_step: "vector" "(" point "," point ")"

// Circle with center at point and with radius INT
circle_step: "circle" "(" point "," INT ")"

// Ellipse with center at point, width INT, height INT
// or an ellipse within the rectangle defined by bottomleft=point, topright=point
ellipse_step: "ellipse" "(" point "," INT "," INT ")"
            | "ellipse" "(" point "," point ")"

// Square with top left at point and side length INT
square_step: "square" "(" point "," INT ")"

// Rectangle with top left at point, width INT, height INT
rectangle_step: "rectangle" "(" point "," INT "," INT ")"

point: "(" INT "," INT ")"

UPDATE_MODE: ("draw" | "erase")

FILLED: "filled"

HALF: "half" "(" DIRECTION ")"

DIRECTION: ["top" | "bottom" | "left" | "right"]

CONSTANT_BASE_STATEMENT_CHARACTER: ("0" | ".")

IDENTIFIER: CNAME | DIGIT

SINGLE_LINE_COMMENT: "//" /[^\n]*/ "\n"

WHITESPACE: /\s+/

%ignore SINGLE_LINE_COMMENT
%ignore WHITESPACE
%ignore C_COMMENT

%import common.CNAME
%import common.INT
%import common.C_COMMENT
%import common.DIGIT
%import common.INT
